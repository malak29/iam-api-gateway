server:
  port: 8080

spring:
  application:
    name: iam-api-gateway
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

  # ADD REDIS CONFIGURATION
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms

# Gateway configuration (matches ApiGatewayProperties structure)
gateway:
  services:
    user-service-url: ${USER_SERVICE_URL:http://localhost:8081}
    auth-service-url: ${AUTH_SERVICE_URL:http://localhost:8082}
    organization-service-url: ${ORGANIZATION_SERVICE_URL:http://localhost:8083}
    chat-service-url: ${CHAT_SERVICE_URL:http://localhost:8084}

  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:*}
    allowed-methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    allowed-headers: ["*"]
    allow-credentials: true
    max-age: 3600

  rate-limit:
    replenish-rate: 10
    burst-capacity: 20
    requested-tokens: 1

  jwt:
    secret: ${JWT_SECRET:dev-secret-key}
    expiration: 86400000 # 24hrs

  fallback:
    retry-after-seconds: 60
    default-message: "Service temporarily unavailable"

# ADD MANAGEMENT CONFIGURATION
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.iam.gateway: DEBUG
    io.lettuce: DEBUG  # Redis client logging