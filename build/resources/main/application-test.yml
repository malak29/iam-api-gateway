spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:iam_test_db}
    username: ${POSTGRES_USER:iam_user}
    password: ${POSTGRES_PASSWORD:test_password}

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6370}  # Different port for test isolation

  cloud:
    vault:
      enabled: false
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOriginPatterns: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
            allowCredentials: true

# Service URLs - Test (different ports for isolation)
services:
  user-service:
    url: http://localhost:18081
  auth-service:
    url: http://localhost:18082
  organization-service:
    url: http://localhost:18083
  chat-service:
    url: http://localhost:18084

# JWT - Test (short expiration)
jwt:
  secret: test-jwt-secret-for-testing-only
  expiration: 300000  # 5 minutes for testing

# Rate limiting - Test (very lenient)
rate-limit:
  redis-rate-limiter:
    replenish-rate: 1000
    burst-capacity: 2000

# Circuit breaker - Test (disabled)
resilience4j:
  circuitbreaker:
    instances:
      user-service-cb:
        registerHealthIndicator: false
        failureRateThreshold: 90  # Very lenient
      auth-service-cb:
        registerHealthIndicator: false
        failureRateThreshold: 90

logging:
  level:
    root: WARN
    com.iam.gateway: INFO