spring:
  datasource:
    url: vault:secret/database #url
    username: vault:secret/database #username
    password: vault:secret/database #password

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD}

  cloud:
    vault:
      enabled: true
      host: ${VAULT_HOST:localhost}
      port: ${VAULT_PORT:8200}
      scheme: http
      authentication: TOKEN
      token: ${VAULT_TOKEN}
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins:
              - ${CORS_ALLOWED_ORIGIN_1:https://yourapp.com}
              - ${CORS_ALLOWED_ORIGIN_2:https://admin.yourapp.com}
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowCredentials: true

# Service URLs - Production (from Vault or environment)
services:
  user-service:
    url: ${USER_SERVICE_URL}
  auth-service:
    url: ${AUTH_SERVICE_URL}
  organization-service:
    url: ${ORGANIZATION_SERVICE_URL}
  chat-service:
    url: ${CHAT_SERVICE_URL}

# CORS - Production (strict origins)
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:https://yourapp.com,https://admin.yourapp.com}

# JWT - Production (from Vault)
jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION:3600000} # 1 hour

# Rate limiting - Production (strict)
rate-limit:
  redis-rate-limiter:
    replenish-rate: ${RATE_LIMIT_REPLENISH:10}
    burst-capacity: ${RATE_LIMIT_BURST:20}

logging:
  level:
    root: WARN
    com.iam.gateway: INFO